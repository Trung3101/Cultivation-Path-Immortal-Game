# ui/soul_dialog.py

import os
import json
from datetime import datetime
from PyQt5.QtWidgets import (
    QDialog, QVBoxLayout, QLabel, QPushButton, QMessageBox
)

SOUL_RESPONSES = {
    1: {
        "greeting": "‚Ä¶Ai ƒë√≥? Linh th·ª©c ta m·ªù nh·∫°t‚Ä¶ ng∆∞∆°i l√†‚Ä¶ ch·ªß nh√¢n m·ªõi?",
        "responses": [
            "Ta t·ª´ng l√† kh√≠ linh c·ªßa m·ªôt luy·ªán kh√≠ s∆∞ v√¥ danh.",
            "Ng∆∞∆°i‚Ä¶ c√≤n qu√° y·∫øu. Ta ch∆∞a th·ªÉ to√†n t√¢m tr·ª£ l·ª±c.",
            "Ta ch·ªâ mu·ªën‚Ä¶ ƒë∆∞·ª£c chi·∫øn ƒë·∫•u m·ªôt l·∫ßn n·ªØa..."
        ]
    },
    2: {
        "greeting": "Ng∆∞∆°i c·∫£m nh·∫≠n ƒë∆∞·ª£c ta sao? Kh√¥ng t·ªá‚Ä¶",
        "responses": [
            "Ta l√† t√†n ni·ªám c·ªßa Huy·∫øt Nguy·ªát Ki·∫øm Ch·ªß, phong ·∫•n n∆°i h∆∞ kh√¥ng.",
            "Ni·ªÅm tin l√† th·ª© d·ªÖ v·ª°, nh∆∞ng h√£y th·ª≠ m·ªôt l·∫ßn.",
            "Th·∫£ ta ra kh·ªèi l·ªõp b·ª•i qu√™n l√£ng‚Ä¶ v√† ta s·∫Ω chi·∫øn ƒë·∫•u b√™n ng∆∞∆°i."
        ]
    },
    3: {
        "greeting": "Cu·ªëi c√πng, ng∆∞∆°i ƒë√£ nghe ti·∫øng ta g·ªçi trong m·ªông t∆∞·ªüng‚Ä¶",
        "responses": [
            "Ta l√† Ki·∫øm H·ªìn Long Th·∫ßn ‚Äì t·ª´ng ch√©m thi√™n y√™u t·∫°i V·∫°n Long C·ªëc.",
            "Linh h·ªìn ng∆∞∆°i dao ƒë·ªông‚Ä¶ nh∆∞ng c√≥ m·ªôt ƒë·∫°o t√¢m ƒë·ªß s√¢u.",
            "H√£y r√®n luy·ªán th√™m, r·ªìi ta s·∫Ω trao ng∆∞∆°i huy·∫øt ·∫•n c·ªßa Ch√¢n Long."
        ]
    },
    4: {
        "greeting": "Ta ƒë√£ ƒë·ª£i‚Ä¶ h√†ng v·∫°n nƒÉm trong gi·∫•c ng·ªß v√¥ t·∫≠n.",
        "responses": [
            "Khi ta c√≤n t·ªânh th·ª©c, c·∫£ gi·ªõi tu ch√¢n qu·ª≥ d∆∞·ªõi Ki·∫øm V·ª±c ta t·∫°o.",
            "Kh√¥ng ai c√≥ th·ªÉ ƒëi·ªÅu khi·ªÉn ta ‚Äì ngo·∫°i tr·ª´ ng∆∞·ªùi m√† ta c√¥ng nh·∫≠n.",
            "Ng∆∞∆°i‚Ä¶ c√≥ th·ªÉ l√† k·∫ª ƒë√≥ chƒÉng?"
        ]
    },
    5: {
        "greeting": "ƒê√£ l√¢u‚Ä¶ k·ªÉ t·ª´ khi ta g·ªçi t√™n ai ƒë√≥ l√† 'Ch·ªß Nh√¢n'.",
        "responses": [
            "Ta l√† h·ªìn kh√≠ vƒ©nh h·∫±ng ‚Äì k·∫øt n·ªëi v·ªõi ƒê·∫°o Lu√¢n ch√≠nh kh√≠.",
            "Linh gi·ªõi n√†y s·∫Øp tan. Ng∆∞∆°i‚Ä¶ l√† hi v·ªçng cu·ªëi c√πng.",
            "Ta nguy·ªán hi·∫øn to√†n b·ªô s·ª©c m·∫°nh n·∫øu ng∆∞∆°i b∆∞·ªõc qua H∆∞ ƒê·∫°o Ki·∫øp."
        ]
    }
}

class SoulDialog(QDialog):
    def __init__(self, user_data, item_data):
        super().__init__()
        self.user_data = user_data
        self.item_data = item_data
        self.soul_tier = item_data.get("soul_tier", 1)
        self.bond_level = 0

        self.setWindowTitle(f"üí¨ Giao ti·∫øp v·ªõi {item_data['name']}")
        self.layout = QVBoxLayout()

        # C√¢u ch√†o ƒë·∫ßu
        greeting = SOUL_RESPONSES.get(self.soul_tier, SOUL_RESPONSES[1])["greeting"]
        self.label = QLabel(f"üßø {greeting}")
        self.layout.addWidget(self.label)

        # N√∫t t∆∞∆°ng t√°c
        for i, option in enumerate([
            "Ng∆∞∆°i l√† ai?",
            "Ta c√≥ th·ªÉ tin ng∆∞∆°i kh√¥ng?",
            "Ng∆∞∆°i mu·ªën g√¨ t·ª´ ta?"
        ]):
            btn = QPushButton(option)
            btn.clicked.connect(lambda _, idx=i: self.respond(idx))
            self.layout.addWidget(btn)

        self.setLayout(self.layout)

    def respond(self, index):
        response_set = SOUL_RESPONSES.get(self.soul_tier, SOUL_RESPONSES[1])
        if index < len(response_set["responses"]):
            response = response_set["responses"][index]
            QMessageBox.information(self, "‚ö° Ph·∫£n h·ªìi t·ª´ kh√≠ linh", response)
            self.bond_level += 1
            self.save_log(response)

    def save_log(self, last_response):
        folder = f"data/soul_logs/{self.user_data['id']}"
        os.makedirs(folder, exist_ok=True)
        path = os.path.join(folder, f"{self.item_data['id']}.json")

        data = {
            "item_name": self.item_data["name"],
            "soul_tier": self.soul_tier,
            "bond_level": self.bond_level,
            "last_contact": datetime.now().isoformat(),
            "last_response": last_response
        }

        with open(path, "w", encoding="utf-8") as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
